#pragma kernel Update

#include "ParticleCommon.cginc"

RWStructuredBuffer<Particle> _ParticleBuffer;
Texture2D<float4> _ColorMap;
Texture2D<float4> _DepthMap;

int _Width;
int _Height;
int _PositionScale;
float _DepthOffset;
float4 _IntrinsicsVector;
float4x4 _TransformMatrix;

float _Scale;
float _MaxFar;
float4 _ProjectionVector;

[numthreads(8,8,1)]
void Update(uint3 id : SV_DispatchThreadID)
{
    const int index = id.y * _Width + id.x;

    Particle p = _ParticleBuffer[index];
    float4 color = _ColorMap[id.xy * _PositionScale];
    float depth = _DepthMap[id.xy * _PositionScale].r - _DepthOffset;
    float x = depth * (id.x - _IntrinsicsVector.z) / _IntrinsicsVector.x * 2.1;
    float y = depth * (id.y - _IntrinsicsVector.w) / _IntrinsicsVector.y;
    float z = depth;
    float4 pos = mul(_TransformMatrix, float4(x, y, z, 1.0));
    p.position = pos.xyz / pos.w;
    p.color = color;
    p.scale = 0.005 * max(1.0, pos.z);

    _ParticleBuffer[index] = p;
}
